package scouting.ui.Forms;

import Graphing.GraphComparator;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Arrays;
import java.util.Vector;
import javax.imageio.stream.ImageOutputStream;
import javax.imageio.stream.MemoryCacheImageOutputStream;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JViewport;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import scouting.ui.MatchData;
import static scouting.ui.MatchData.comboBoxOption;
import scouting.ui.RoboticsHashMap;

public class Stats extends javax.swing.JFrame 
{
    private RoboticsHashMap TeamList = null;

    public Stats() 
    {
        initComponents();
        this.setLocationRelativeTo(null);
        setResizable(false);
        GraphingComboBox.removeAllItems();
        for(int i = 0;i<comboBoxOption.length;i++)
        {
                GraphingComboBox.addItem(MatchData.comboBoxOption[i]);
        }
        
    }
    public void createTeamTable()
    { 
       //int row = 0;
        DefaultTableModel tableModel = new DefaultTableModel();
        MatchData match = new MatchData();
        JTable teamsTBL = new JTable(tableModel);
        teamsTBL.setLocation(0, 0);
        teamsTBL.setSize(900, 300);
        teamsTBL.setVisible(true);
        teamsTBL.setEnabled(true);
        //System.out.println(match.getMatchNumber());
        SwingUtilities.updateComponentTreeUI(teamsTBL);
        
        for(int i = 0; i < MatchData.numProperties-1; i++)
        {
            tableModel.addColumn("data");
        }
        
        for(String teamNum : TeamList.keySet())
        {
            for(MatchData data : TeamList.getTeam(teamNum))
            {
                tableModel.addRow(data.getRowOutput());
            }
       }
        teamsTBL.getColumnModel().getColumn(0).setMaxWidth(40);
        teamsTBL.getColumnModel().getColumn(1).setMaxWidth(40);
        teamsTBL.getColumnModel().getColumn(2).setMinWidth(100);
        teamsTBL.getColumnModel().getColumn(3).setMaxWidth(40);
        teamsTBL.getColumnModel().getColumn(4).setMaxWidth(65);
        teamsTBL.getColumnModel().getColumn(5).setMaxWidth(65);
        teamsTBL.getColumnModel().getColumn(6).setMaxWidth(40);
        teamsTBL.getColumnModel().getColumn(7).setMaxWidth(40);
        teamsTBL.getColumnModel().getColumn(8).setMaxWidth(40);
        teamsTBL.getColumnModel().getColumn(9).setMinWidth(200);
        teamsTBL.getColumnModel().getColumn(10).setMinWidth(200);
    
        
        teamsTBL.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        System.out.println(teamsTBL.getColumnModel().getColumn(10).getWidth());
//         this.teamsTBL = new JTable(tableModel);
        //this.teamsTBL = new JTable(tableModel);
       //teamsTBL.setVisible(true);
       //this.add(teamsTBL);
       tableModel.fireTableDataChanged();
    }
    public Stats(RoboticsHashMap teamList) throws Exception
    {
        this();
        if(teamList == null){
            throw new Exception("null teamList in stats window.");
        }
        
        TeamList = teamList;
        createTeamTable();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        OpenGraphsButton = new javax.swing.JButton();
        OpenStatsButton = new javax.swing.JButton();
        SelectedText = new javax.swing.JLabel();
        GraphingComboBox = new javax.swing.JComboBox<>();
        Graph = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(223, 230, 238));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setName("teamsTBL"); // NOI18N

        OpenGraphsButton.setBackground(new java.awt.Color(255, 255, 255));
        OpenGraphsButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        OpenGraphsButton.setText("Open Graphs");
        OpenGraphsButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        OpenGraphsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenGraphsButtonActionPerformed(evt);
            }
        });

        OpenStatsButton.setBackground(new java.awt.Color(255, 255, 255));
        OpenStatsButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        OpenStatsButton.setText("Open Stats");
        OpenStatsButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        OpenStatsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenStatsButtonActionPerformed(evt);
            }
        });

        SelectedText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SelectedText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SelectedText.setText("Selected:");

        GraphingComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        GraphingComboBox.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        GraphingComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraphingComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(752, 752, 752)
                        .addComponent(OpenStatsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(GraphingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(OpenGraphsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addComponent(SelectedText, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Graph, javax.swing.GroupLayout.PREFERRED_SIZE, 931, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Graph, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GraphingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OpenGraphsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelectedText))
                .addGap(252, 252, 252)
                .addComponent(OpenStatsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel1.getAccessibleContext().setAccessibleName("teamsTBL");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GraphingComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraphingComboBoxActionPerformed

    }//GEN-LAST:event_GraphingComboBoxActionPerformed

    private void OpenStatsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenStatsButtonActionPerformed

    }//GEN-LAST:event_OpenStatsButtonActionPerformed

    private void OpenGraphsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenGraphsButtonActionPerformed
        createGraph();
    }//GEN-LAST:event_OpenGraphsButtonActionPerformed
    
    /*
    
    */
    private void createGraph(){
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

	GraphComparator[] graphingArray = new GraphComparator[TeamList.keySet().size()];
		
	int index = 0;
	double average = 0;
        String graphName = "";
        
	for(String teamNumber : TeamList.keySet()){
            if(GraphingComboBox.getSelectedItem().toString() == MatchData.AVG_SCORE){
                average = TeamList.get(teamNumber).getAverageMatchScore();
                graphName = "Comparing Overall Scores";
            }else if(GraphingComboBox.getSelectedItem().toString() == MatchData.BOILER_SCORE){
                average = TeamList.get(teamNumber).getAverageBoilerScore();
                graphName = "Comparing Boiler Scores";
            }else if(GraphingComboBox.getSelectedItem().toString() == MatchData.GEARS_DELIV){
                average = TeamList.get(teamNumber).getAverageGearsDelivered();
                graphName = "Comparing Gears Delivered";
            }else if(GraphingComboBox.getSelectedItem().toString() == MatchData.PENALTIES){
                average = TeamList.get(teamNumber).getAveragePenalties();
                graphName = "Comparing Penalties";
            }
            graphingArray[index] = new GraphComparator(teamNumber, average);
			
            index++;
	}
	Arrays.sort(graphingArray);
        
        
        
        
		
	for(int i = 0; i < graphingArray.length; i++){
            dataset.setValue(graphingArray[i].getAverageVal(), "Score", graphingArray[i].getTeamNum());
	}
                
	JFreeChart chart = ChartFactory.createBarChart(graphName, "Teams", "Score", dataset, PlotOrientation.VERTICAL, false, true, false);
        
       ChartPanel panel = new ChartPanel(chart);
       Graph.setLayout(new BorderLayout());
       Graph.add(panel, BorderLayout.CENTER);
       Graph.validate();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() 
            {
                new Stats().setVisible(true);  
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Graph;
    private javax.swing.JComboBox<String> GraphingComboBox;
    private javax.swing.JButton OpenGraphsButton;
    private javax.swing.JButton OpenStatsButton;
    private javax.swing.JLabel SelectedText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinner1;
    // End of variables declaration//GEN-END:variables
}
